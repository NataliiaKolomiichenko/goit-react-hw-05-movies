{"version":3,"file":"static/js/669.d4cd16c3.chunk.js","mappings":"8SAEMA,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEwBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IAF5E,cAEOG,EAFP,gBAGoBA,EAASC,KAH7B,cAGOA,EAHP,yBAIQA,GAJR,kCAMCC,QAAQC,MAAR,MAND,yFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kGAEwBN,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,iCAA8EQ,EAA9E,yBAFxB,cAEOL,EAFP,gBAGoBA,EAASC,KAH7B,cAGOA,EAHP,yBAIQA,GAJR,kCAMCC,QAAQC,MAAR,MAND,yFAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kGAEwBR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BW,EAA/B,oBAAkDV,EAAlD,oBAFxB,cAEOG,EAFP,gBAGoBA,EAASC,KAH7B,cAGOA,EAHP,yBAIQA,GAJR,kCAMCC,QAAQC,MAAR,MAND,yFAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,kGAEwBR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BW,EAA/B,4BAA0DV,EAA1D,oBAFxB,cAEOG,EAFP,gBAGoBA,EAASC,KAH7B,cAGOA,EAHP,yBAIQA,GAJR,kCAMCC,QAAQC,MAAR,MAND,yFAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,kGAEwBR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BW,EAA/B,4BAA0DV,EAA1D,oBAFxB,cAEOG,EAFP,gBAGoBA,EAASC,KAH7B,cAGOA,EAHP,yBAIQA,GAJR,kCAMCC,QAAQC,MAAR,MAND,yF,uKC3CMO,EAASC,EAAAA,GAAAA,OAAH,oEAKNC,EAAMD,EAAAA,GAAAA,IAAH,4CAIHE,EAAaF,EAAAA,GAAAA,IAAH,+D,SC0CvB,EAhDqB,WAAO,IAAD,IACfJ,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAwCQ,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,qGACKtB,EAAAA,EAAAA,IAAkBC,GADvB,OAChBsB,EADgB,OAEtBZ,EAAgBY,GAChBV,EAAeU,EAAaC,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,KAHrB,2CAAH,qDAKvBL,GACH,GAAE,CAACrB,IAEJ,IAIQ2B,EAAiClB,EAAjCkB,MAAOC,EAA0BnB,EAA1BmB,SAAUC,EAAgBpB,EAAhBoB,YAEzB,OACI,iCACI,SAAC1B,EAAD,CAAQ2B,KAAK,SAASC,QARV,WAChBhB,EAASE,EACZ,EAMO,sBACA,UAACZ,EAAD,YACI,gBAAK2B,IAAG,yCAAoCH,GAAeI,IAAKN,EAAOO,OAAO,SAC9E,UAAC5B,EAAD,YACI,wBAAKqB,KACL,yCACA,sCACA,yBAAMC,KACN,oCACA,yBAAMjB,EAAYwB,KAAK,eAI/B,oDACA,2BACI,yBAAI,SAAC,KAAD,CAAMC,GAAG,OAAT,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAER,SAAC,KAAD,MAGX,C","sources":["components/MoviesAPI.js","pages/MovieDetails/StyledMovieDetails.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '298b3ba9f2c0a557e7d7fc47b0ac595b';\n\nexport async function TrendingMovies() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        console.error(error);\n    };\n};\n\nexport async function SearchMovies(searchName) {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchName}&include_adult=false`);\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        console.error(error);\n    };\n};\n\nexport async function FetchMovieDetails(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        console.error(error);\n    };\n};\n\nexport async function FetchMovieCredits(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        console.error(error);\n    };\n};\n\nexport async function FetchMovieReviews(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        console.error(error);\n    };\n};","import styled from \"styled-components\"\n\nexport const Button = styled.button`\n    display: block;\n    margin-top: 10px;\n`\n\nexport const Box = styled.div`\n    display: flex;\n`\n\nexport const ContentBox = styled.div`\n    flex-grow: 1;\n    padding: 10px;\n`","import { useState, useEffect } from 'react';\nimport { FetchMovieDetails } from '../../components/MoviesAPI'\nimport { Link, Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { Button, Box, ContentBox } from './StyledMovieDetails';\n\nconst MovieDetails = () => { \n    const { movieId } = useParams();\n    const [movieDetails, setMovieDetails] = useState({});\n    const [movieGenres, setMovieGenres] = useState([]);\n    const location = useLocation();\n    const navigate = useNavigate();\n    const backLinkHref = location.state?.from ?? \"/\"\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            const moviesDetail = await FetchMovieDetails(movieId);\n            setMovieDetails(moviesDetail);\n            setMovieGenres(moviesDetail.genres.map(item => item.name))\n        }\n        fetchMovieDetails();\n    }, [movieId]);\n\n    const handleClick = () => {\n        navigate(backLinkHref)\n    }\n\n    const { title, overview, poster_path } = movieDetails;\n\n    return (\n        <>\n            <Button type=\"button\" onClick={handleClick}>Go back</Button>\n            <Box>\n                <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} height=\"400\" />\n                <ContentBox>\n                    <h2>{title}</h2>\n                    <div>User score</div>\n                    <h2>Overview</h2>\n                    <div>{overview}</div>\n                    <h2>Genres</h2>\n                    <div>{movieGenres.join(', ')}</div>\n                </ContentBox>\n            </Box>\n            \n            <h3>Additional information</h3>\n            <ul>\n                <li><Link to=\"cast\">Cast</Link></li>\n                <li><Link to=\"reviews\">Reviews</Link></li>\n            </ul>\n            <Outlet />\n        </>\n    )\n}\n\nexport default MovieDetails;"],"names":["BASE_URL","API_KEY","TrendingMovies","axios","response","data","console","error","SearchMovies","searchName","FetchMovieDetails","movieId","FetchMovieCredits","FetchMovieReviews","Button","styled","Box","ContentBox","useParams","useState","movieDetails","setMovieDetails","movieGenres","setMovieGenres","location","useLocation","navigate","useNavigate","backLinkHref","state","from","useEffect","fetchMovieDetails","moviesDetail","genres","map","item","name","title","overview","poster_path","type","onClick","src","alt","height","join","to"],"sourceRoot":""}