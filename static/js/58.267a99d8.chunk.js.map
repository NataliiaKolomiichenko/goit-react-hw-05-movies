{"version":3,"file":"static/js/58.267a99d8.chunk.js","mappings":"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","sources":["components/MoviesAPI.js","components/MovieLink/MovieLink.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/StyledSearchForm.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '298b3ba9f2c0a557e7d7fc47b0ac595b';\n\nexport async function TrendingMovies() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        console.error(error);\n    };\n};\n\nexport async function SearchMovies(searchName) {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchName}&include_adult=false`);\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        console.error(error);\n    };\n};\n\nexport async function FetchMovieDetails(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        console.error(error);\n    };\n};\n\nexport async function FetchMovieCredits(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        console.error(error);\n    };\n};\n\nexport async function FetchMovieReviews(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        console.error(error);\n    };\n};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieLink = (({ title, id, location }) => {\n    if (location.pathname === '/') {\n        return (<Link to={`movies/${id}`} state={{from: location}}>{title}</Link>)\n    }\n    return (<Link to={`${id}`} state={{from: location}}>{title}</Link>)\n})\n\nMovieLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n}\n\nexport default MovieLink;","import PropTypes from 'prop-types'\nimport MovieLink from '../MovieLink';\n\nconst SearchMoviesList = ({ items, location }) => {\n    return (\n        <ul>\n            {items.map(({ id, title }) => <li key={id}><MovieLink title={title} id={id} location={location} /></li>)}\n        </ul>\n    )\n}\n\nSearchMoviesList.propTypes = {\n    location: PropTypes.object.isRequired,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n    })\n    ),\n}\n\nexport default SearchMoviesList;","import styled from \"styled-components\"\n\nexport const StyledSearchForm = styled.form`\n    margin-top: 10px;\n`","import PropTypes from 'prop-types';\nimport {StyledSearchForm} from './StyledSearchForm'\n\nconst SearchForm = ({ onSubmit }) => {\n    return (\n        <StyledSearchForm onSubmit={onSubmit}>\n            <input type=\"text\" name=\"query\" />\n            <button type=\"submit\">Search</button>\n        </StyledSearchForm>\n    );\n};\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { SearchMovies } from '../../components/MoviesAPI'\nimport SearchForm from '../../components/SearchForm';\nimport MoviesList from '../../components/MoviesList'\n\nconst Movies = () => {\n    const [searchMoviesList, setSearchMoviesList] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\");\n    const location = useLocation();\n\n    useEffect(() => {\n        if (query === null) {\n            return\n        };\n\n        const fetchSearchingMovies = async () => {\n            const data = await SearchMovies(query)\n            const movies = await data.results;\n            setSearchMoviesList(movies)\n        }\n        fetchSearchingMovies();\n    }, [query]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const searchQuery = form.elements.query.value.toLowerCase();\n        searchQuery === \"\" ? setSearchParams({}) : setSearchParams({ query: searchQuery });\n        form.reset()\n    }\n\n    return (\n        <>\n            <SearchForm onSubmit={handleSubmit} />\n            \n            {(query !== null) && <MoviesList items={searchMoviesList} location={location} />}\n        </>\n    )\n\n}\n\nexport default Movies;"],"names":["BASE_URL","API_KEY","TrendingMovies","axios","response","data","console","error","SearchMovies","searchName","FetchMovieDetails","movieId","FetchMovieCredits","FetchMovieReviews","title","id","location","pathname","to","state","from","items","map","StyledSearchForm","styled","onSubmit","type","name","useState","searchMoviesList","setSearchMoviesList","useSearchParams","searchParams","setSearchParams","query","get","useLocation","useEffect","fetchSearchingMovies","results","movies","e","preventDefault","form","currentTarget","searchQuery","elements","value","toLowerCase","reset","MoviesList"],"sourceRoot":""}